[alias]
	ap = add -p
	au = add -u
	cb = checkout -b
	cp = checkout -p
	co = "!f() { git checkout origin/$1; }; f" # checkout-origin
	cm = co master
	ca = commit --amend
	caa = ca --no-edit
	cc = caa -a
	cwip = commit -m 'wip'
	ccwip = cwip -a
	cleanf = clean -xdf
	diffs = diff --stat
	diffo = diff HEAD@{upstream}
	done = !git fetch && git cm && git hk
	hk = !git branch --merged origin/master | egrep -v \"^\\*\" | xargs -r git branch -D
	# lol = log --graph --decorate --oneline
	lol = log --graph --format=format:\"%C(auto)%h%d %s %C(bold)%al\"
	# if 'lol' reused, no branch auto-completion
	l    = log --graph --format=format:\"%C(auto)%h%d %s %C(bold)%al\" -10
	ll   = log --graph --format=format:\"%C(auto)%h%d %s %C(bold)%al\" -20
	lll  = log --graph --format=format:\"%C(auto)%h%d %s %C(bold)%al\" -30
	llll = log --graph --format=format:\"%C(auto)%h%d %s %C(bold)%al\" -40
	lc = "!f() { git lol HEAD $1 ^`git merge-base HEAD $1`^; }; f" # lol-compare
	lcm = lc origin/master
	lco = lc HEAD@{upstream}
	lolo = "!f() { git lol origin/$1; }; f" # lol-origin
	lo = "!f() { git l origin/$1; }; f" # l-origin
	pushf = push --force-with-lease
	pushu = !git push --set-upstream origin `git rev-parse --abbrev-ref HEAD`
	r = rebase origin/master
	ri = r --interactive
	ra = rebase --abort
	rc = rebase --continue
	rs = rebase --skip
	rio = rebase --interactive HEAD@{upstream}
	ro = rebase --onto
	rsth = reset --hard
	rsto = rsth HEAD@{upstream}
	s = status
	s1 = s -uno
	shoq = show --quiet --abbrev-commit
	shos = show --stat --abbrev-commit
	uc = reset HEAD^ # uncommit
[pull]
	ff = only
[core]
	whitespace = trailing-space,tab-in-indent
	editor = vim
	pager = less -x1,5
[color "diff"]
	whitespace = red reverse
[diff]
	wsErrorHighlight = all
[advice]
	detachedHead = false
[merge]
	tool = vimdiff
[fetch]
	prune = true
